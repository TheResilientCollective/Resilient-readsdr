% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loglik_fun.R
\name{sd_loglik_fun}
\alias{sd_loglik_fun}
\title{Generate a log-likelihood function for an SD model}
\usage{
sd_loglik_fun(
  pars_df,
  deSolve_components,
  sim_controls,
  meas_model_list,
  extra_stocks = NULL,
  extra_constraints = NULL,
  neg_log = FALSE
)
}
\arguments{
\item{pars_df}{A data frame}

\item{deSolve_components}{A list}

\item{sim_controls}{A list}

\item{meas_model_list}{A list of lists. Each second-level list corresponds to
a measurement model. Here is an example: \cr
\code{list(stock_name = "Infected", stock_fit_type = "net_change", \cr
           dist = list(name     = "dpois", sim_data = "lambda"), \cr
           data = 1:10)}}

\item{extra_stocks}{An optional list}

\item{extra_constraints}{An optional list}

\item{neg_log}{A boolean that indicates whether the log-likelihood function
returns a positive or negative value. If \code{TRUE}, the function
returns a positive value (for minimisation optimisers). If
\code{FALSE}, the function returns the original log-likelihood.}
}
\value{
A function
}
\description{
Generate a log-likelihood function for an SD model
}
\examples{
  pars_df            <- data.frame(name = "beta_var", type = "constant", par_trans = "log")
  filepath           <- system.file("models/", "SIR.stmx", package = "readsdr")
  mdl                <- read_xmile(filepath)
  deSolve_components <- mdl$deSolve_components
  sim_controls       <- list(start = 0, stop = 10, step = 0.25, integ_method ="rk4")
  mm1 <- list(stock_name = "Infected", stock_fit_type = "net_change",
              dist       = list(name     = "dpois", sim_data = "lambda", dist_offset = "1e-5"),
              data       = 1:10)
  sd_loglik_fun(pars_df, deSolve_components, sim_controls, list(mm1))
}
